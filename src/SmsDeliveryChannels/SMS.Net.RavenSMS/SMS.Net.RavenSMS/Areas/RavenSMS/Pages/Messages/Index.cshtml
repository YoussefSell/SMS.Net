@page
@model SMS.Net.RavenSMS.Pages.MessagesIndexPageModel
@{
}

<div class="app-content pt-3 p-md-3 p-lg-4">
    <div class="container-xl">

        <div class="row g-3 mb-4 align-items-center justify-content-between">
            <div class="col-auto">
                <h1 class="app-page-title mb-0">Messages</h1>
            </div>
            <div class="col-auto">
                <div class="page-utilities">
                    <div class="row g-2 justify-content-start justify-content-md-end align-items-center">
                        <div class="col-auto">
                            <form class="table-search-form row gx-1 align-items-center">
                                <div class="col-auto">
                                    <input type="text" id="search-orders" name="searchorders" class="form-control search-orders" placeholder="Search">
                                </div>
                                <div class="col-auto">
                                    <button type="submit" class="btn app-btn-secondary">Search</button>
                                </div>
                            </form>
                        </div><!--//col-->
                        <div class="col-auto">
                            <select class="form-select w-auto">
                                <option selected value="option-1">All</option>
                                <option value="option-2">This week</option>
                                <option value="option-3">This month</option>
                                <option value="option-3">Last month</option>
                                <option value="option-4">Last 3 months</option>
                                <option value="option-4">This Year</option>

                            </select>
                        </div>
                        <div class="col-auto">
                            <a class="btn app-btn-secondary" asp-page="/Messages/Add">
                                <i class="fas fa-edit"></i>
                                Compose
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <nav id="orders-table-tab" class="orders-table-tab app-nav-tabs nav shadow-sm flex-column flex-sm-row mb-4">
            <a class="flex-sm-fill text-sm-center nav-link active" id="orders-all-tab" data-bs-toggle="tab" href="#orders-all" role="tab" aria-controls="orders-all" aria-selected="true">All</a>
            <a class="flex-sm-fill text-sm-center nav-link" id="orders-paid-tab" data-bs-toggle="tab" href="#orders-paid" role="tab" aria-controls="orders-paid" aria-selected="false">Queued</a>
            <a class="flex-sm-fill text-sm-center nav-link" id="orders-pending-tab" data-bs-toggle="tab" href="#orders-pending" role="tab" aria-controls="orders-pending" aria-selected="false">Sent</a>
            <a class="flex-sm-fill text-sm-center nav-link" id="orders-cancelled-tab" data-bs-toggle="tab" href="#orders-cancelled" role="tab" aria-controls="orders-cancelled" aria-selected="false">Failed</a>
        </nav>

        <div class="app-card app-card-orders-table shadow-sm mb-5">
            <div class="app-card-body">
                <div class="table-responsive">
                    <table id="messages_table" class="table app-table-hover mb-0 text-left">
                        <thead>
                            <tr>
                                <th class="cell">Id</th>
                                <th class="cell">Client</th>
                                <th class="cell">From</th>
                                <th class="cell">To</th>
                                <th class="cell">Date</th>
                                <th class="cell">Status</th>
                                <th class="cell"></th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <nav class="app-pagination">
            <ul id="paginator" class="pagination justify-content-center">
            </ul>
        </nav>

    </div>
</div>

@section scripts {
<script src="~/js/messages.index.page.min.js"></script>
<script>
    // init the list of messages
    let messages = [];

    // load the initial data
    $.ajax({
        url: '/ravenSMS/messages/index/?handler=Messages',
        data: {
            pageIndex: 1,
            pageSize: 5,
        },
        success: function (result)
        {
            // save the result
            messages = result.data;

            // select table element
            const $table = $("#messages_table");

            // add the data to the table
            $.each(messages, function() {
                $table.append(buildTableRow(this));
            });

            // set the pagination details
            SetPagination(1, 20);
        } 
    });

    function buildTableRow(message) {
        const messageDate = moment(message.date);
            console.log(messageDate);

        return `<tr>
            <td style="max-width:150px" class="cell">${message.id}</td>
            <td class="cell"><span class="truncate">${message.client.name}</span></td>
            <td class="cell">${message.from}</td>
            <td class="cell">${message.to}</td>
            <td class="cell"><span>${messageDate.format('DD/MMM/YYYY')}</span><span class="note">${messageDate.format('hh:mm A')}</span></td>
            <td class="cell">${GetStatusSpan()}</td>
            <td class="cell">
                <a class="btn-sm app-btn-secondary" href="Messages/${message.id}/Preview">View</a>
            </td>
        </tr>`
    }

    function SetPagination(currentIndex, pagesCount) {
        // select the paginator
        const $paginator = $("#paginator");

        // empty the paginator
        $paginator.empty();

        // append the previous button
        $paginator.append(`
            <li class="page-item disabled">
                <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Previous</a>
            </li>
        `);

        // append pages
        for (i = 1; i <= pagesCount; i++) {
            $paginator.append(`<li class="page-item ${i == currentIndex ? 'active': ''}"><a class="page-link" href="#">${i}</a></li>`);
        }

        // append the Next button
        $paginator.append(`
            <li class="page-item">
                <a class="page-link" href="#">Next</a>
            </li>
        `);
    }

    function GetStatusSpan(status) {
        switch(status){
            case 1: return `<span class="badge bg-warning">Queued</span>`
            case 2: return `<span class="badge bg-danger">Failed</span>`
            case 3: return `<span class="badge bg-success">Sent</span>`
            default: return `<span class="badge bg-secondary">Created</span>`
        }
    }

</script>
}