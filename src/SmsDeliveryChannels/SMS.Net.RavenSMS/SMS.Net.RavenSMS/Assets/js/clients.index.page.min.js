// init the status tabs click event
$('a[data-bs-toggle="tab"]').on('click', function (e) {
    loadData();
});

// init the required variables
let clients = [];

// load the initial data
loadData();

function loadData() {
    $.ajax({
        url: '/ravenSMS/clients/index/?handler=clients',
        data: {
            pageIndex: 1,
            pageSize: 5,
            searchQuery: $("#search-query").val(),
            Status: $('nav#clients-status a.active').attr('value'),
            phoneNumbers: [],
        },
        success: function (result) {
            // save the result
            clients = result.data;

            // select table element
            const $table = $("#clients_table");

            // empty the table
            $("#clients_table > tbody").empty();

            // add the data to the table
            $.each(clients, function () {
                $table.append(buildTableRow(this));
            });

            // set the pagination details
            SetPagination(
                result.pagination.rowsCount,
                result.pagination.pageIndex,
                result.pagination.pageSize,
            );
        }
    });
}

function buildTableRow(client) {
    const clientDate = moment(client.date);

    let markup = `<tr>
            <td style="max-width:150px" class="cell">${client.id}</td>
            <td class="cell"><span class="truncate">${client.name}</span></td>
            <td class="cell">${GetStatusSpan(client.status)}</td>
            <td class="cell">`;

    // add the preview page if the client has been configured
    if (client.status != 3) {
        markup += `<a class="btn-sm app-btn-secondary" href="Clients/Preview/${client.id}">View</a>`;
    }

    // add the setup page id the client is not configured
    if (client.status == 3) {
        markup += `<a class="btn-sm app-btn-secondary ms-2" href="Clients/Setup/${client.id}">Setup</a>`;
    }

    return markup += "</td></tr>";
}

function SetPagination(rowsCount, pageIndex, pageSize) {
    // select the paginator
    const $paginator = $("#paginator");

    // empty the paginator
    $paginator.empty();

    // append the previous button
    $paginator.append(`
            <li class="page-item disabled">
                <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Previous</a>
            </li>
        `);

    // get the pagination logic
    const pagination = paginate(rowsCount, pageIndex, pageSize);

    // append pages
    $.each(pagination.pages, function () {
        $paginator.append(`<li class="page-item ${this == pagination.currentPage ? 'active' : ''}"><a class="page-link" href="#">${this}</a></li>`);
    })

    // append the Next button
    $paginator.append(`
            <li class="page-item">
                <a class="page-link" href="#">Next</a>
            </li>
        `);
}

function GetStatusSpan(status) {
    switch (status) {
        case 0: return `<span class="badge bg-warning">UnActive</span>`
        case 1: return `<span class="badge bg-success">Connected</span>`
        case 2: return `<span class="badge bg-danger">Disconnected</span>`
        default: return `<span class="badge bg-danger">Require setup</span>`
    }
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImNsaWVudHMuaW5kZXgucGFnZS5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbml0IHRoZSBzdGF0dXMgdGFicyBjbGljayBldmVudFxyXG4kKCdhW2RhdGEtYnMtdG9nZ2xlPVwidGFiXCJdJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcclxuICAgIGxvYWREYXRhKCk7XHJcbn0pO1xyXG5cclxuLy8gaW5pdCB0aGUgcmVxdWlyZWQgdmFyaWFibGVzXHJcbmxldCBjbGllbnRzID0gW107XHJcblxyXG4vLyBsb2FkIHRoZSBpbml0aWFsIGRhdGFcclxubG9hZERhdGEoKTtcclxuXHJcbmZ1bmN0aW9uIGxvYWREYXRhKCkge1xyXG4gICAgJC5hamF4KHtcclxuICAgICAgICB1cmw6ICcvcmF2ZW5TTVMvY2xpZW50cy9pbmRleC8/aGFuZGxlcj1jbGllbnRzJyxcclxuICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgIHBhZ2VJbmRleDogMSxcclxuICAgICAgICAgICAgcGFnZVNpemU6IDUsXHJcbiAgICAgICAgICAgIHNlYXJjaFF1ZXJ5OiAkKFwiI3NlYXJjaC1xdWVyeVwiKS52YWwoKSxcclxuICAgICAgICAgICAgU3RhdHVzOiAkKCduYXYjY2xpZW50cy1zdGF0dXMgYS5hY3RpdmUnKS5hdHRyKCd2YWx1ZScpLFxyXG4gICAgICAgICAgICBwaG9uZU51bWJlcnM6IFtdLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAvLyBzYXZlIHRoZSByZXN1bHRcclxuICAgICAgICAgICAgY2xpZW50cyA9IHJlc3VsdC5kYXRhO1xyXG5cclxuICAgICAgICAgICAgLy8gc2VsZWN0IHRhYmxlIGVsZW1lbnRcclxuICAgICAgICAgICAgY29uc3QgJHRhYmxlID0gJChcIiNjbGllbnRzX3RhYmxlXCIpO1xyXG5cclxuICAgICAgICAgICAgLy8gZW1wdHkgdGhlIHRhYmxlXHJcbiAgICAgICAgICAgICQoXCIjY2xpZW50c190YWJsZSA+IHRib2R5XCIpLmVtcHR5KCk7XHJcblxyXG4gICAgICAgICAgICAvLyBhZGQgdGhlIGRhdGEgdG8gdGhlIHRhYmxlXHJcbiAgICAgICAgICAgICQuZWFjaChjbGllbnRzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkdGFibGUuYXBwZW5kKGJ1aWxkVGFibGVSb3codGhpcykpO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIC8vIHNldCB0aGUgcGFnaW5hdGlvbiBkZXRhaWxzXHJcbiAgICAgICAgICAgIFNldFBhZ2luYXRpb24oXHJcbiAgICAgICAgICAgICAgICByZXN1bHQucGFnaW5hdGlvbi5yb3dzQ291bnQsXHJcbiAgICAgICAgICAgICAgICByZXN1bHQucGFnaW5hdGlvbi5wYWdlSW5kZXgsXHJcbiAgICAgICAgICAgICAgICByZXN1bHQucGFnaW5hdGlvbi5wYWdlU2l6ZSxcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gYnVpbGRUYWJsZVJvdyhjbGllbnQpIHtcclxuICAgIGNvbnN0IGNsaWVudERhdGUgPSBtb21lbnQoY2xpZW50LmRhdGUpO1xyXG5cclxuICAgIGxldCBtYXJrdXAgPSBgPHRyPlxyXG4gICAgICAgICAgICA8dGQgc3R5bGU9XCJtYXgtd2lkdGg6MTUwcHhcIiBjbGFzcz1cImNlbGxcIj4ke2NsaWVudC5pZH08L3RkPlxyXG4gICAgICAgICAgICA8dGQgY2xhc3M9XCJjZWxsXCI+PHNwYW4gY2xhc3M9XCJ0cnVuY2F0ZVwiPiR7Y2xpZW50Lm5hbWV9PC9zcGFuPjwvdGQ+XHJcbiAgICAgICAgICAgIDx0ZCBjbGFzcz1cImNlbGxcIj4ke0dldFN0YXR1c1NwYW4oY2xpZW50LnN0YXR1cyl9PC90ZD5cclxuICAgICAgICAgICAgPHRkIGNsYXNzPVwiY2VsbFwiPmA7XHJcblxyXG4gICAgLy8gYWRkIHRoZSBwcmV2aWV3IHBhZ2UgaWYgdGhlIGNsaWVudCBoYXMgYmVlbiBjb25maWd1cmVkXHJcbiAgICBpZiAoY2xpZW50LnN0YXR1cyAhPSAzKSB7XHJcbiAgICAgICAgbWFya3VwICs9IGA8YSBjbGFzcz1cImJ0bi1zbSBhcHAtYnRuLXNlY29uZGFyeVwiIGhyZWY9XCJDbGllbnRzL1ByZXZpZXcvJHtjbGllbnQuaWR9XCI+VmlldzwvYT5gO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIGFkZCB0aGUgc2V0dXAgcGFnZSBpZCB0aGUgY2xpZW50IGlzIG5vdCBjb25maWd1cmVkXHJcbiAgICBpZiAoY2xpZW50LnN0YXR1cyA9PSAzKSB7XHJcbiAgICAgICAgbWFya3VwICs9IGA8YSBjbGFzcz1cImJ0bi1zbSBhcHAtYnRuLXNlY29uZGFyeSBtcy0yXCIgaHJlZj1cIkNsaWVudHMvU2V0dXAvJHtjbGllbnQuaWR9XCI+U2V0dXA8L2E+YDtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gbWFya3VwICs9IFwiPC90ZD48L3RyPlwiO1xyXG59XHJcblxyXG5mdW5jdGlvbiBTZXRQYWdpbmF0aW9uKHJvd3NDb3VudCwgcGFnZUluZGV4LCBwYWdlU2l6ZSkge1xyXG4gICAgLy8gc2VsZWN0IHRoZSBwYWdpbmF0b3JcclxuICAgIGNvbnN0ICRwYWdpbmF0b3IgPSAkKFwiI3BhZ2luYXRvclwiKTtcclxuXHJcbiAgICAvLyBlbXB0eSB0aGUgcGFnaW5hdG9yXHJcbiAgICAkcGFnaW5hdG9yLmVtcHR5KCk7XHJcblxyXG4gICAgLy8gYXBwZW5kIHRoZSBwcmV2aW91cyBidXR0b25cclxuICAgICRwYWdpbmF0b3IuYXBwZW5kKGBcclxuICAgICAgICAgICAgPGxpIGNsYXNzPVwicGFnZS1pdGVtIGRpc2FibGVkXCI+XHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cInBhZ2UtbGlua1wiIGhyZWY9XCIjXCIgdGFiaW5kZXg9XCItMVwiIGFyaWEtZGlzYWJsZWQ9XCJ0cnVlXCI+UHJldmlvdXM8L2E+XHJcbiAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgYCk7XHJcblxyXG4gICAgLy8gZ2V0IHRoZSBwYWdpbmF0aW9uIGxvZ2ljXHJcbiAgICBjb25zdCBwYWdpbmF0aW9uID0gcGFnaW5hdGUocm93c0NvdW50LCBwYWdlSW5kZXgsIHBhZ2VTaXplKTtcclxuXHJcbiAgICAvLyBhcHBlbmQgcGFnZXNcclxuICAgICQuZWFjaChwYWdpbmF0aW9uLnBhZ2VzLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJHBhZ2luYXRvci5hcHBlbmQoYDxsaSBjbGFzcz1cInBhZ2UtaXRlbSAke3RoaXMgPT0gcGFnaW5hdGlvbi5jdXJyZW50UGFnZSA/ICdhY3RpdmUnIDogJyd9XCI+PGEgY2xhc3M9XCJwYWdlLWxpbmtcIiBocmVmPVwiI1wiPiR7dGhpc308L2E+PC9saT5gKTtcclxuICAgIH0pXHJcblxyXG4gICAgLy8gYXBwZW5kIHRoZSBOZXh0IGJ1dHRvblxyXG4gICAgJHBhZ2luYXRvci5hcHBlbmQoYFxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIj5cclxuICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwicGFnZS1saW5rXCIgaHJlZj1cIiNcIj5OZXh0PC9hPlxyXG4gICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgIGApO1xyXG59XHJcblxyXG5mdW5jdGlvbiBHZXRTdGF0dXNTcGFuKHN0YXR1cykge1xyXG4gICAgc3dpdGNoIChzdGF0dXMpIHtcclxuICAgICAgICBjYXNlIDA6IHJldHVybiBgPHNwYW4gY2xhc3M9XCJiYWRnZSBiZy13YXJuaW5nXCI+VW5BY3RpdmU8L3NwYW4+YFxyXG4gICAgICAgIGNhc2UgMTogcmV0dXJuIGA8c3BhbiBjbGFzcz1cImJhZGdlIGJnLXN1Y2Nlc3NcIj5Db25uZWN0ZWQ8L3NwYW4+YFxyXG4gICAgICAgIGNhc2UgMjogcmV0dXJuIGA8c3BhbiBjbGFzcz1cImJhZGdlIGJnLWRhbmdlclwiPkRpc2Nvbm5lY3RlZDwvc3Bhbj5gXHJcbiAgICAgICAgZGVmYXVsdDogcmV0dXJuIGA8c3BhbiBjbGFzcz1cImJhZGdlIGJnLWRhbmdlclwiPlJlcXVpcmUgc2V0dXA8L3NwYW4+YFxyXG4gICAgfVxyXG59Il19
